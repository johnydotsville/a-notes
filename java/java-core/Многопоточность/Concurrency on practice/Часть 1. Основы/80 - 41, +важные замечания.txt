ѕЅ - потокобезопасность

* Publishing and escaping, тема 3.2
“рудно пон€ть по самой книге, да и гуглитс€ не очень. Ќо само пон€тие публикации и ускользани€
кажетс€ интересным.

*  ласс ThreadLocal, тема 3.3, ќграничение одним потоком (thread confinement)

* CopyOnWriteArrayList, ConcurrentMap, Collections.unmodifiableMap


[ ] «агуглить наверн€ка, что такое состо€ние гонки на хорошем примере, а то € начал уже сомневатьс€,
что есть race condition и чем оно отличаетс€ от lost updates.
[ ] ѕосмотреть какие еще обертки есть кроме Collections.unmodifiableMap, Collections.syncronizedList
и посмотреть как они реализованы внутри, как там потокобезопасность устроена


ƒополнительные выводы:
* —тоит быть вдвойне осторожным и внимательным, когда многопоточность касаетс€ состо€ни€ из нескольких
взаимосв€занных переменных, т.е. когда несколько переменных именно вместе как-то логически св€заны и
изменение одной как-то св€зано, например, с изменением или анализом другой.



* ѕосле завершени€ раздела нужно сделать резюме, где свести р€дом все примеры и дать комментарии.
ј также все советы обдумать и оп€ть же свести к короткому списку.
* ѕосмотреть реализацию потокобезопасности в джавовских классах, вроде ѕЅ коллекций, или Vector