* Прототипы

  * https://learn.javascript.ru/function-prototype
    Частично скипнул

  * https://learn.javascript.ru/native-prototypes
    https://learn.javascript.ru/prototype-methods
    Полностью скипнул, потому что с виду это какая-то хрень.
    Пока не встречу инфу, для понимания которой это надо, не буду разбирать.

* Классы

   * https://learn.javascript.ru/class
   Законспектировал только "внешние проявления". Не стал разбираться, как
   классы соотносятся с прототипами. Вот тут для этого понимания пригодилась
   бы инфа из раздела о прототипах. Но есть сомнения, что это нужно для
   повседневного программирования. Так что пропускаю детали и просто учусь
   пользоваться классами без изучения теории как они реализованы внутри.

  * https://learn.javascript.ru/extend-natives
    Наследование от встроенных классов.

  * https://learn.javascript.ru/instanceof



P.S. Надо в этом будет разобраться, но факультативно. Т.е. это не приоритетная
задача. Приоритетная - актуальная практика. А как работает под капотом - в
отдельное время и не в ущерб основной задаче.

P.P.S. Вероятно, "нормальное" ООП реализовано в TypeScript и как-то сильно
возиться над разбором ООП в ванильном JS мб и не нужно. Опять же, потом,
факультативно.